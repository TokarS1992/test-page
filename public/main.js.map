{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/componets/list-templates/list-templates.component.css","webpack:///./src/app/componets/list-templates/list-templates.component.html","webpack:///./src/app/componets/list-templates/list-templates.component.ts","webpack:///./src/app/componets/template-view/template-view.component.css","webpack:///./src/app/componets/template-view/template-view.component.html","webpack:///./src/app/componets/template-view/template-view.component.ts","webpack:///./src/app/services/http.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AAEsC;AACH;AAE1F,IAAM,SAAS,GAAW;IACtB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,YAAY,EAAE;IACzD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,yGAAsB,EAAE;IACxD,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,sGAAqB,EAAE;CAC9D,CAAC;AAUF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAR5B,8DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,4DAAY,CAAC,OAAO,CAAC,SAAS,EAAE,EAAC,aAAa,EAAE,IAAI,EAAC,CAAC;aACxD;YACF,OAAO,EAAE;gBACL,4DAAY;aACf;SACJ,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACpB7B,mB;;;;;;;;;;;ACAA,+G;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACe;AACU;AAClE,kDAAkD;AAE2C;AACH;AAC3C;AACS;AACH;AAoBrD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAlBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,sGAAqB;gBACrB,yGAAsB;aACvB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,kEAAmB;gBACnB,wDAAU;gBACV,yDAAW;gBACX,oEAAgB;gBAChB,kEAAiB;aAClB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC9BtB,mB;;;;;;;;;;;ACAA,yRAAyR,eAAe,wBAAwB,eAAe,GAAG,aAAa,kCAAkC,mBAAmB,qC;;;;;;;;;;;;;;;;;;;;;;;;;ACAlW;AACQ;AAS1D;IAEE,gCACY,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;QAFtB,cAAS,GAAe,EAAE,CAAC;IAG9B,CAAC;IAEH,yCAAQ,GAAR;QAAA,iBAIC;QAHG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,cAAI;YACxC,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IAVQ,sBAAsB;QANlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;YAG9B,SAAS,EAAE,CAAE,kEAAW,CAAE;SAC3B,CAAC;yCAIkB,kEAAW;OAHlB,sBAAsB,CAYlC;IAAD,6BAAC;CAAA;AAZkC;;;;;;;;;;;;ACVnC,8CAA8C,mBAAmB,cAAc,wBAAwB,oBAAoB,EAAE,aAAa,mBAAmB,EAAE,eAAe,qBAAqB,EAAE,C;;;;;;;;;;;ACArM,8MAA8M,oGAAoG,uL;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlO;AACK;AACpC;AACS;AAS1D;IAoBE,+BACY,KAAqB,EACrB,IAAiB,EACjB,GAAgB;QAFhB,UAAK,GAAL,KAAK,CAAgB;QACrB,SAAI,GAAJ,IAAI,CAAa;QACjB,QAAG,GAAH,GAAG,CAAa;QAlBnB,iBAAY,GAAG;YAClB,KAAK,EAAE,QAAQ;YACf,OAAO,EAAE;gBACL,OAAO,EAAE;oBACL,CAAC,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,CAAC;oBACzC,CAAC,EAAE,MAAM,EAAE,SAAS,EAAC,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC;oBAC5C,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC;oBACzC,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC;oBACvC,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC;oBAChB,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;oBACjB,CAAC,MAAM,EAAE,OAAO,CAAC;oBACjB,CAAC,OAAO,CAAC;iBACZ;aACJ;SACJ,CAAC;QAMA,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC;YAClB,SAAS,EAAE,CAAC,iBAAiB,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;SAC5E,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;IACjD,CAAC;IAEM,wCAAQ,GAAf;QAAA,iBAUC;QATG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,oBAAkB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAI,CAAC,CAAC,IAAI,CAAC,cAAI;YAC1E,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YAErB,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,GAAG,CAAC,KAAK,CAAC;gBACvB,SAAS,EAAE,CAAC,KAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;aACjF,CAAC,CAAC;YAEH,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACP,CAAC;IACM,gDAAgB,GAAvB,UAAwB,EAAc;YAAZ,cAAI,EAAE,cAAI;QACjC,IAAM,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,oBAAkB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAI,EAAE;YACpE,QAAQ,EAAE,WAAW,CAAC,OAAO,EAAE;SAClC,CAAC,CAAC,IAAI,CAAC,cAAI;YACR,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;IACN,CAAC;IAlDU,qBAAqB;QAPjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;YAG7B,SAAS,EAAE,CAAE,kEAAW,CAAE;YAC1B,aAAa,EAAE,+DAAiB,CAAC,IAAI;SACtC,CAAC;yCAsBmB,8DAAc;YACf,kEAAW;YACZ,0DAAW;OAvBjB,qBAAqB,CAoDjC;IAAD,4BAAC;CAAA;AApDiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZS;AAC8C;AACzF,qCAAqC;AACrC,oDAAoD;AACpD,qDAAqD;AAC3B;AAK1B;IAII,qBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,qDAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB;YAC3D,QAAQ,EAAE,8BAA8B,EAAE,CAAC,CAAC;QAChD,IAAI,CAAC,OAAO,GAAG,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IACjE,CAAC;IAEM,6BAAO,GAAd,UAAe,GAAW;QACtB,MAAM,CAAC,4CAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,aAAG;YAC3B,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IACM,gCAAU,GAAjB,UAAkB,GAAW,EAAE,IAAI;QAC/B,6BAA6B;QAC7B,MAAM,CAAC,4CAAK,CAAC;YACT,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,GAAG;YACR,IAAI,EAAE,IAAI;YACV,OAAO,EAAE;gBACL,cAAc,EAAE,kBAAkB;aACrC;SACJ,CAAC,CAAC;IACP,CAAC;IAzBQ,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK4B,kDAAI;OAJrB,WAAW,CA0BvB;IAAD,kBAAC;CAAA;AA1BuB;;;;;;;;;;;;;;ACVxB;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { ListTemplatesComponent } from './componets/list-templates/list-templates.component';\r\nimport { TemplateViewComponent } from './componets/template-view/template-view.component';\r\n\r\nconst appRoutes: Routes = [\r\n    { path: '', pathMatch: 'full', redirectTo: '/templates' },\r\n    { path: 'templates', component: ListTemplatesComponent },\r\n    { path: 'templates/:id', component: TemplateViewComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(appRoutes, {enableTracing: true})\r\n     ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class AppRoutingModule { }","module.exports = \"\"","module.exports = \"<h1>Welcome to app</h1>\\n\\n<main class=\\\"main\\\">\\n  <router-outlet></router-outlet>\\n</main>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule, JsonpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n// import { RouterModule } from '@angular/router';\n\nimport { ListTemplatesComponent } from './componets/list-templates/list-templates.component';\nimport { TemplateViewComponent } from './componets/template-view/template-view.component';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { QuillEditorModule } from 'ngx-quill-editor';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TemplateViewComponent,\n    ListTemplatesComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    JsonpModule,\n    AppRoutingModule,\n    QuillEditorModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<h2>Templates table</h2>\\n\\n<table class=\\\"table\\\">\\n  <thead>\\n  <tr>\\n    <th>Name</th>\\n    <th>Last modified:</th>\\n  </tr>\\n  </thead>\\n  <tbody>\\n  <tr *ngFor=\\\"let template of templates\\\">\\n    <td>\\n      <a [routerLink]=\\\"['/templates', template.id]\\\">{{template.name}}</a>\\n      <!--<span>{{template.name}} {{template.id}} </span>-->\\n    </td>\\n    <td>{{template.modified}}</td>\\n  </tr>\\n  </tbody>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../../services/http.service';\nimport { Template } from '../../interfaces/template';\n\n@Component({\n  selector: 'app-list-templates',\n  templateUrl: './list-templates.component.html',\n  styleUrls: ['./list-templates.component.css'],\n  providers: [ HttpService ]\n})\nexport class ListTemplatesComponent implements OnInit {\n  public templates: Template[] = [];\n  constructor(\n      private http: HttpService\n  ) { }\n\n    ngOnInit() {\n        this.http.getData('api/templates').then(data => {\n            this.templates = data;\n        });\n    }\n\n}\n","module.exports = \".form-control .quill-editor{overflow: visible;} .form-group { border: 1px solid #ccc; position: relative; } .has-error { border-color: red; } .has-success { border-color: green; }\"","module.exports = \"<h2>Template view</h2>\\r\\n<div class=\\\"container\\\">\\r\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit(form.value)\\\" class=\\\"form\\\">\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': (!content.valid && content.touched), 'has-success': (content.valid && content.touched)}\\\">\\r\\n            <quill-editor [formControl]=\\\"content\\\" [options]=\\\"editorConfig\\\" (change)=\\\"onContentChanged($event)\\\"></quill-editor>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\"","import { Component, ViewChild, ViewEncapsulation, OnInit } from '@angular/core';\nimport { FormGroup, AbstractControl, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpService } from '../../services/http.service';\n\n@Component({\n  selector: 'app-template-view',\n  styleUrls: ['./template-view.component.css'],\n  templateUrl: './template-view.component.html',\n  providers: [ HttpService ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TemplateViewComponent implements OnInit {\n    public form: FormGroup;\n    public content: AbstractControl;\n    public template: {template: ''};\n\n    public editorConfig = {\n        theme: 'bubble',\n        modules: {\n            toolbar: [\n                ['bold', 'italic', 'underline', 'strike'],\n                [{ 'list': 'ordered'}, { 'list': 'bullet' }],\n                [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n                [{ 'color': [] }, { 'background': [] }],\n                [{ 'font': [] }],\n                [{ 'align': [] }],\n                ['link', 'image'],\n                ['clean']\n            ]\n        }\n    };\n  constructor(\n      private route: ActivatedRoute,\n      private http: HttpService,\n      private _fb: FormBuilder\n  ) {\n      this.form = _fb.group({\n          'content': ['<p>Template</p>', Validators.compose([Validators.required])],\n      });\n\n      this.content = this.form.controls['content'];\n  }\n\n  public ngOnInit() {\n      this.http.getData(`/api/templates/${this.route.snapshot.params.id}`).then(data => {\n          this.template = data;\n\n          this.form = this._fb.group({\n              'content': [this.template.template, Validators.compose([Validators.required])],\n          });\n\n          this.content = this.form.controls['content'];\n      });\n  }\n  public onContentChanged({ html, text }) {\n     const currectDate = new Date();\n     this.http.updateData(`/api/templates/${this.route.snapshot.params.id}`, {\n         modified: currectDate.valueOf()\n     }).then(data => {\n         console.log(data);\n     });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions, URLSearchParams } from '@angular/http';\n// import { Observable } from 'rxjs';\n// import { map, catchError } from 'rxjs/operators';\n// import { Template } from '../interfaces/template';\nimport axios from 'axios';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n    headers: Headers;\n    options: RequestOptions;\n\n    constructor(private http: Http) {\n        this.headers = new Headers({ 'Content-Type': 'application/json',\n            'Accept': 'q=0.8;application/json;q=0.9' });\n        this.options = new RequestOptions({ headers: this.headers });\n    }\n\n    public getData(url: string) {\n        return axios.get(url).then(res => {\n           return res.data;\n        });\n    }\n    public updateData(url: string, data) {\n        // console.log(this.options);\n        return axios({\n            method: 'put',\n            url: url,\n            data: data,\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}